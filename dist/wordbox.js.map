{"version":3,"sources":["webpack://Effy/webpack/universalModuleDefinition","webpack://Effy/webpack/bootstrap","webpack://Effy/./src/wordbox.js","webpack://Effy/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","src_wordbox","constructor","wrapper","options","this","assign","isLead","leadWord","words","colors","isFixedWidth","width","height","$wrapper","$","length","colorPos","_create","_bindListener","concat","_randArray","parent","fillRect","left","top","wordLen","ratio","dot","_randRange","wordLen1","Math","round","wordLen2","leftW","rightW","slice","topH","_createBox","_getNextColor","word","color","lineHeight","paddingTop","wordW","_getWordsWidth","title","line","ceil","parseInt","css","max","html","url","append","base","num","center","min","rand","random","appendTo","array","clone","ret","len","floor","tmp","push","_this","timer","bind","clearTimeout","setTimeout","empty","fn","wordbox","console","log"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,KAAAD,IAEAD,EAAA,KAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,8CC4KI,IAAAC,QA9OIC,YAAYC,EAASC,GAYjB,OAFAC,KAAKD,QAAUlB,OAAOoB,WARlBC,QAAQ,EACRC,SAAU,KACVC,MAAO,KACPC,QAAS,UAAW,WACpBC,cAAc,EACdC,MAAO,IACPC,OAAQ,KAE+BT,GAC3CC,KAAKS,SAAWC,EAAEZ,MACbE,KAAKS,UAAYT,KAAKD,QAAQK,MAAMO,OAAS,KAIlDX,KAAKI,SACLJ,KAAKK,UACLL,KAAKY,SAAW,EAEhBZ,KAAKa,UACLb,KAAKc,gBACEd,MAGXa,UACQb,KAAKD,QAAQG,QAAUF,KAAKD,QAAQI,SACpCH,KAAKI,OAASJ,KAAKD,QAAQI,UAAUY,OAAOf,KAAKgB,WAAWhB,KAAKD,QAAQK,QAEzEJ,KAAKI,MAAQJ,KAAKgB,WAAWhB,KAAKD,QAAQK,OAI1CJ,KAAKD,QAAQO,cACbN,KAAKS,SAASF,MAAMP,KAAKD,QAAQQ,OACjCP,KAAKS,SAASD,OAAOR,KAAKD,QAAQS,UAGlCR,KAAKS,SAASF,MAAMP,KAAKS,SAASQ,SAASV,SAC3CP,KAAKS,SAASD,OAAOR,KAAKS,SAASQ,SAAST,WAGhDR,KAAKkB,SAASlB,KAAKS,SACL,EACA,EACAT,KAAKS,SAASF,QACdP,KAAKS,SAASD,SACdR,KAAKI,OAMvBc,SAASpB,EAASqB,EAAMC,EAAKb,EAAOC,EAAQJ,GACxC,IAAIiB,EAAUjB,EAAMO,OAChBW,EAAQf,EAAQC,EAChBe,EAAMvB,KAAKwB,WAAW,EAAG,EAAG,IAC5BC,EAAWC,KAAKC,MAAMN,EAAUE,EAAI,IACpCK,EAAWP,EAAUI,EAEzB,GAAe,GAAXJ,EAmBJ,GARgB,GAAZI,GACAA,EAAW,EACXG,KACmB,GAAZA,IACPA,EAAW,EACXH,KAGAH,GAAS,IAAK,CAEd,IAAIO,EAAQH,KAAKC,MAAMpB,EAAQgB,EAAI,IAC/BO,EAASvB,EAAQsB,EAErB7B,KAAKkB,SAASpB,EACAqB,EACAC,EACAS,EACArB,EACAJ,EAAM2B,MAAM,EAAGN,IAC7BzB,KAAKkB,SAASpB,EACAqB,EAAKU,EACLT,EACAU,EACAtB,EACAJ,EAAM2B,MAAMN,QACxB,CAEF,IAAIO,EAAON,KAAKC,MAAMnB,EAASe,EAAI,IAGnCvB,KAAKkB,SAASpB,EACAqB,EACAC,EACAb,EACAyB,EACA5B,EAAM2B,MAAM,EAAGN,IAC7BzB,KAAKkB,SAASpB,EACAqB,EACAC,EAAIY,EACJzB,EACAC,EAAOwB,EACP5B,EAAM2B,MAAMN,SAnD1BzB,KAAKiC,WAAWnC,EACAqB,EACAC,EACAb,EACAC,EACAJ,EAAM,GACNJ,KAAKkC,iBAqD7BD,WAAWnC,EAASqB,EAAMC,EAAKb,EAAOC,EAAQ2B,EAAMC,GAChD,IAAIC,EAAa7B,EACb8B,EAAa,EACbC,EAAQvC,KAAKwC,eAAeL,EAAKM,OAGrC,GAAIF,EAAQhC,EAAO,CACf,IAAImC,EAAOhB,KAAKiB,KAAKJ,EAAQhC,GAE7B8B,EAAaO,SAAS5C,KAAKS,SAASoC,IAAI,cAExCrC,GADA8B,EAAaZ,KAAKoB,IAAI,GAAItC,EAASkC,EAAOL,GAAc,GAI5D,IAAIU,EAAO,iCAAmCxC,EAAQ,aAC9BC,EAAS,kBACL6B,EAAa,UACpBjB,EAAM,WACLD,EAAO,uBACKiB,EAAQ,KAC7BE,EAAc,eAAiBA,EAAa,MAAS,IACtD,cAAqBH,EAAKa,IAAM,MAAQb,EAAKM,MAAQ,aAEjE/B,EAAEZ,GAASmD,OAAOF,GAStBvB,WAAW0B,EAAMC,EAAKxB,GAClB,IAAIyB,EAASF,EAAOC,EAChBE,EAAMD,GAAU,EAAIzB,GACpBmB,EAAMM,GAAU,EAAIzB,GACpB2B,EAAO5B,KAAK6B,UAAYT,EAAMO,GAAOA,EAEzC,OAAW,GAAPF,GACQD,IAGJI,GAAMvC,OAAOf,KAAKwB,WAAW0B,EAAOI,EAAMH,EAAM,EAAGxB,IAO/DO,gBACI,IAAIE,EAAQpC,KAAKD,QAAQM,OAAOL,KAAKY,SAAWZ,KAAKD,QAAQM,OAAOM,QAEpE,OADAX,KAAKY,WACEwB,EAMXI,eAAeL,GAKX,OAJIzB,EAAE,WAAWC,OAAS,GACtBD,EAAE,qEAAqEV,KAAKS,SAASoC,IAAI,aAAa,2BAA2BW,SAAS,QAE9I9C,EAAE,gBAAgBqC,KAAKZ,GAChBzB,EAAE,gBAAgBH,QAM7BS,WAAWyC,GACP,IAEIH,EAFAI,EAAQD,EAAM1B,QACd4B,KAEJ,IAAI,IAAIxF,EAAI,EAAGyF,EAAMH,EAAM9C,OAAQxC,EAAIyF,EAAKzF,IAAK,CAC7CmF,EAAO5B,KAAKmC,MAAMnC,KAAK6B,SAAWG,EAAM/C,QACxC,IAAImD,EAAMJ,EAAM,GAChBA,EAAM,GAAKA,EAAMJ,GACjBI,EAAMJ,GAAQQ,EACdH,EAAII,KAAKL,EAAM,IACfA,EAAQA,EAAM3B,MAAM,GAExB,OAAO4B,EAMX7C,gBACI,IAAKd,KAAKD,QAAQO,aAAc,CAC5B,IAAI0D,EAAQhE,KACRiE,EAAQ,KACZvD,EAAE3C,QAAQmG,KAAK,SAAU,WACjBD,IACAE,aAAapG,OAAOkG,OACpBA,EAAQ,MAEZA,EAAQG,WAAW,WAEXJ,EAAMvD,SAASF,SAAWyD,EAAMvD,SAASQ,SAASV,SAClDyD,EAAMvD,SAASD,UAAYwD,EAAMvD,SAASQ,SAAST,WACnDwD,EAAMvD,SAASF,MAAMyD,EAAMvD,SAASQ,SAASV,SAC7CyD,EAAMvD,SAASD,OAAOwD,EAAMvD,SAASQ,SAAST,UAE9CwD,EAAMvD,SAAS4D,QAEfL,EAAM9C,SAAS8C,EAAMvD,SACL,EACA,EACAuD,EAAMvD,SAASF,QACfyD,EAAMvD,SAASD,SACfwD,EAAM5D,SAE3B,gDCrOvBM,EAAE4D,GAAGC,QAAU,SAASxE,GAIpB,OAFe,IAAIH,EAAQI,KAAMD,GAS1BW,EAAEV,OANLwE,QAAQC,IAAI,QACL","file":"wordbox.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Effy\"] = factory();\n\telse\n\t\troot[\"Effy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","    class WordBox {\r\n        constructor(wrapper, options) {\r\n            const DEFAULTS = {        \r\n                isLead: false,          // 是否包含“全部”分类，该lead分类会始终显示在第一个位置上\r\n                leadWord: null,\r\n                words: null,\r\n                colors: ['#cc5b34', '#c27c4d'],\r\n                isFixedWidth: true,\r\n                width: 1000,\r\n                height: 200\r\n            };\r\n            this.options = Object.assign({}, DEFAULTS, options);\r\n            this.$wrapper = $(wrapper);\r\n            if (!this.$wrapper || this.options.words.length < 1) {\r\n                return false;\r\n            }\r\n    \r\n            this.words = [];\r\n            this.colors = [];\r\n            this.colorPos = 0;\r\n    \r\n            this._create();\r\n            this._bindListener();\r\n            return this;\r\n        }\r\n    \r\n        _create() {\r\n            if (this.options.isLead && this.options.leadWord) {\r\n                this.words = [this.options.leadWord].concat(this._randArray(this.options.words));\r\n            } else {\r\n                this.words = this._randArray(this.options.words);\r\n            }\r\n            \r\n            //容器宽高初始化\r\n            if (this.options.isFixedWidth) {\r\n                this.$wrapper.width(this.options.width);\r\n                this.$wrapper.height(this.options.height);\r\n            } else {\r\n                // 容器宽高根据父级元素自适应\r\n                this.$wrapper.width(this.$wrapper.parent().width());\r\n                this.$wrapper.height(this.$wrapper.parent().height());\r\n            }           \r\n    \r\n            this.fillRect(this.$wrapper, \r\n                          0,\r\n                          0, \r\n                          this.$wrapper.width(), \r\n                          this.$wrapper.height(), \r\n                          this.words);\r\n    \r\n        }\r\n        /*\r\n        * 递归创建box\r\n        */\r\n        fillRect(wrapper, left, top, width, height, words) {\r\n            let wordLen = words.length,               \r\n                ratio = width / height,\r\n                dot = this._randRange(1, 2, 0.5),\r\n                wordLen1 = Math.round(wordLen * dot[0]),\r\n                wordLen2 = wordLen - wordLen1;\r\n    \r\n            if (wordLen == 1) {\r\n                this._createBox(wrapper, \r\n                                left, \r\n                                top, \r\n                                width, \r\n                                height, \r\n                                words[0], \r\n                                this._getNextColor());\r\n                return;\r\n            } \r\n    \r\n            if (wordLen1 == 0) {\r\n                wordLen1 = 1;\r\n                wordLen2--;\r\n            } else if (wordLen2 == 0) {\r\n                wordLen2 = 1;\r\n                wordLen1--;\r\n            }\r\n    \r\n            if (ratio >= 2.5) {\r\n                // 左右分割\r\n                let leftW = Math.round(width * dot[0]),                    \r\n                    rightW = width - leftW;\r\n    \r\n                this.fillRect(wrapper, \r\n                              left, \r\n                              top, \r\n                              leftW, \r\n                              height, \r\n                              words.slice(0, wordLen1));\r\n                this.fillRect(wrapper, \r\n                              left+leftW, \r\n                              top, \r\n                              rightW, \r\n                              height, \r\n                              words.slice(wordLen1));             \r\n           } else {\r\n                // 上下分割\r\n                let topH = Math.round(height * dot[0]);\r\n                    // bottomH = height - topH;\r\n    \r\n                this.fillRect(wrapper, \r\n                              left, \r\n                              top, \r\n                              width, \r\n                              topH, \r\n                              words.slice(0, wordLen1));\r\n                this.fillRect(wrapper, \r\n                              left, \r\n                              top+topH, \r\n                              width, \r\n                              height-topH, \r\n                              words.slice(wordLen1));\r\n            }\r\n        }\r\n    \r\n        /*\r\n            * 创建box\r\n            * @param left、right为box相对于 wrapper 绝对定位的偏移量\r\n            */\r\n        _createBox(wrapper, left, top, width, height, word, color) {\r\n            let lineHeight = height,\r\n                paddingTop = 0,        \r\n                wordW = this._getWordsWidth(word.title);\r\n    \r\n            // 如果box中文字的宽度超出box本身的宽度，则需要分多行显示\r\n            if (wordW > width) {\r\n                let line = Math.ceil(wordW / width);\r\n                // 注意设置 line-height 属性和 padding-top 属性\r\n                lineHeight = parseInt(this.$wrapper.css('font-size'));\r\n                paddingTop = Math.max(0, (height - line * lineHeight) / 2);\r\n                height -= paddingTop;\r\n            }\r\n    \r\n            let html = '<div class=\"box\" style=\"width:' + width + 'px;' +\r\n                        'height:' + height + 'px;' +\r\n                        'line-height:'+ lineHeight + 'px;' +\r\n                        'top:' + top + 'px;' +\r\n                        'left:' + left + 'px;' +\r\n                        'background-color:' + color + ';' +             \r\n                        (paddingTop ? ('padding-top:' + paddingTop + 'px;') : '') +\r\n                        '\">' + '<a href=\"' + word.url + '\" >' + word.title + '</a></div>';          \r\n    \r\n            $(wrapper).append(html);\r\n        }\r\n    \r\n        /* 将base随机分成num份\r\n            * @param base:    被分割的数\r\n            * @param num:     分割的份数         \r\n            * @param round:   base被分割之后两部分的最大差，为了避免每部分太大或太小\r\n            * @param 返回值:  包含num个分界点的数组\r\n            */\r\n        _randRange(base, num, round) {        \r\n            let center = base / num,\r\n                min = center * (1 - round),\r\n                max = center * (1 + round),\r\n                rand = Math.random() * (max - min) + min;\r\n    \r\n            if (num == 1) {\r\n                return [base];\r\n            }\r\n    \r\n            return [rand].concat(this._randRange(base - rand, num - 1, round));\r\n        }\r\n    \r\n    \r\n        /*\r\n            * 每次绘制box时获取color列表中下一个颜色值\r\n            */\r\n        _getNextColor() {\r\n            let color = this.options.colors[this.colorPos % this.options.colors.length];\r\n            this.colorPos++;\r\n            return color;\r\n        }\r\n    \r\n        /*\r\n            * 获取指定字体大小的word的宽度，根据该宽度和 box 宽度判断是否分行\r\n            */\r\n        _getWordsWidth(word) {\r\n            if ($('#get_ww').length < 1) {\r\n                $('<div id=\"get_ww\" style=\"display:block;visibility:hidden;font-size:'+this.$wrapper.css('font-size')+'px\"><span></span></div>').appendTo('body');\r\n            }\r\n            $('#get_ww span').html(word);\r\n            return $('#get_ww span').width();\r\n        }\r\n    \r\n        /*\r\n            * 随机排列数组元素\r\n            */\r\n        _randArray(array) {\r\n            let clone = array.slice(),          \r\n                ret = [], \r\n                rand;\r\n            for(let i = 0, len = array.length; i < len; i++) {\r\n                rand = Math.floor(Math.random() * clone.length);\r\n                let tmp = clone[0];\r\n                clone[0] = clone[rand];\r\n                clone[rand] = tmp;\r\n                ret.push(clone[0]);\r\n                clone = clone.slice(1);\r\n            }\r\n            return ret;\r\n        }\r\n    \r\n        /*\r\n            * 绑定窗口大小改变事件\r\n            */\r\n        _bindListener() {\r\n            if (!this.options.isFixedWidth) {\r\n                let _this = this, \r\n                    timer = null;\r\n                $(window).bind('resize', function() {     \r\n                    if (timer) {\r\n                        clearTimeout(window.timer);\r\n                        timer = null;\r\n                    }           \r\n                    timer = setTimeout(function() {\r\n                        // 响应式 wordbox 根据父级元素宽度和高度的变化来改变自身的宽度和高度，重新绘制\r\n                        if (_this.$wrapper.width() != _this.$wrapper.parent().width() || \r\n                            _this.$wrapper.height() != _this.$wrapper.parent().height()) {\r\n                            _this.$wrapper.width(_this.$wrapper.parent().width());\r\n                            _this.$wrapper.height(_this.$wrapper.parent().height());\r\n                            // 清除之前绘制的wordbox\r\n                            _this.$wrapper.empty();\r\n                            // 重新绘制wordbox\r\n                            _this.fillRect(_this.$wrapper, \r\n                                            0,\r\n                                            0,\r\n                                            _this.$wrapper.width(), \r\n                                            _this.$wrapper.height(),\r\n                                            _this.words);\r\n                        }                    \r\n                    }, 800);                 \r\n                });\r\n            }\r\n        }\r\n    }    \r\n\r\n    export default WordBox;\r\n\r\n\r\n\r\n\r\n","import './wordbox.css';\r\n//import $ from 'jquery';\r\nimport WordBox from './wordbox.js';\r\n\r\n$.fn.wordbox = function(options) {\r\n\r\n    var instance = new WordBox(this, options); \r\n    \r\n    if (!instance) {\r\n        console.log(\"创建失败\");\r\n        return null;\r\n    }               \r\n    \r\n    // 返回jquery对象 \r\n    // this指的是应用插件的元素，而不是instance\r\n    return $(this);\r\n};\r\n\r\nexport {WordBox};\r\n"],"sourceRoot":""}