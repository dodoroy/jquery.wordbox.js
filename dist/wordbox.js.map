{"version":3,"sources":["webpack://dodoroy/webpack/universalModuleDefinition","webpack://dodoroy/webpack/bootstrap","webpack://dodoroy/./src/wordbox.js","webpack://dodoroy/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","src_wordbox","constructor","wrapper","options","this","assign","isLead","leadWord","words","colors","isFixedWidth","width","height","$wrapper","$","length","colorPos","_create","_bindListener","_randArray","parent","fillRect","left","top","wordLen","ratio","dot","_randRange","wordLen1","Math","round","wordLen2","leftW","rightW","slice","topH","_createBox","_getNextColor","word","color","lineHeight","paddingTop","wordW","_getWordsWidth","title","line","ceil","parseInt","css","max","html","url","append","base","num","center","min","rand","random","concat","appendTo","array","clone","ret","len","floor","tmp","push","_this","timer","bind","clearTimeout","setTimeout","empty","fn","wordbox","console","log"],"mappings":"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","file":"wordbox.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dodoroy\"] = factory();\n\telse\n\t\troot[\"dodoroy\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * @Description:        WordBox类 \n * @Author:             Effy \n * @Date:               2018-11-14 15:52:28 \n * @Last Modified by: Effy\n * @Last Modified time: 2018-11-14 16:17:18\n */\n\nclass WordBox {\n  /**\n   * Creates an instance of WordBox.\n   * @param {String} wrapper 外层容器\n   * @param {Object} options 插件选项\n   * @memberof WordBox\n   */\n  constructor(wrapper, options) {\n    const DEFAULTS = {        \n      isLead: false,          // 是否包含“全部”分类，该分类会始终显示在第一个位置上\n      leadWord: null,\n      words: null,\n      colors: ['#cc5b34', '#c27c4d'],\n      isFixedWidth: true,\n      width: 1000,\n      height: 200\n    }\n    this.options = Object.assign({}, DEFAULTS, options)\n    this.$wrapper = $(wrapper)\n    if (!this.$wrapper || this.options.words.length < 1) {\n      return false\n    }\n    \n    this.words = []\n    this.colors = []\n    this.colorPos = 0\n\n    this._create()\n    this._bindListener()\n\n    return this\n  }\n  /**\n   * 初始化方法\n   * @method _create\n   * @memberof WordBox\n   */\n  _create() {\n    if (this.options.isLead && this.options.leadWord) {\n      this.words = [this.options.leadWord, ...this._randArray(this.options.words)]\n    } else {\n      this.words = this._randArray(this.options.words)\n    }\n            \n    // 容器宽高初始化\n    if (this.options.isFixedWidth) {\n      // 容器固定宽高\n      this.$wrapper.width(this.options.width)\n      this.$wrapper.height(this.options.height)\n    } else {\n      // 容器宽高根据父级元素自适应\n      this.$wrapper.width(this.$wrapper.parent().width())\n      this.$wrapper.height(this.$wrapper.parent().height())\n    }           \n    \n    // 递归创建box\n    this.fillRect(this.$wrapper, \n      0,\n      0, \n      this.$wrapper.width(), \n      this.$wrapper.height(), \n      this.words)\n  }\n  \n  /**\n   * 递归创建box\n   * @method fillRect\n   * @param {String} wrapper 外层容器\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} width\n   * @param {Number} height\n   * @param {Array} words\n   * @memberof WordBox\n   */\n  fillRect(wrapper, left, top, width, height, words) {\n    let wordLen = words.length,               \n      ratio = width / height,\n      dot = this._randRange(1, 2, 0.5),\n      wordLen1 = Math.round(wordLen * dot[0]),\n      wordLen2 = wordLen - wordLen1\n    \n    if (wordLen == 1) {\n      this._createBox(wrapper, \n        left, \n        top, \n        width, \n        height, \n        words[0], \n        this._getNextColor())\n      return\n    } \n    \n    if (wordLen1 == 0) {\n      wordLen1 = 1\n      wordLen2--\n    } else if (wordLen2 == 0) {\n      wordLen2 = 1\n      wordLen1--\n    }\n    \n    if (ratio >= 2.5) {\n      // 左右分割\n      let leftW = Math.round(width * dot[0]),                    \n        rightW = width - leftW\n    \n      this.fillRect(wrapper, \n        left, \n        top, \n        leftW, \n        height, \n        words.slice(0, wordLen1))\n      this.fillRect(wrapper, \n        left+leftW, \n        top, \n        rightW, \n        height, \n        words.slice(wordLen1))             \n    } else {\n      // 上下分割\n      let topH = Math.round(height * dot[0])\n      // bottomH = height - topH;\n    \n      this.fillRect(wrapper, \n        left, \n        top, \n        width, \n        topH, \n        words.slice(0, wordLen1))\n      this.fillRect(wrapper, \n        left, \n        top+topH, \n        width, \n        height-topH, \n        words.slice(wordLen1))\n    }\n  }\n    \n  /**\n   * 创建box\n   * @method _createBox\n   * @param {String} wrapper\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} width\n   * @param {Number} height\n   * @param {String} word\n   * @param {String} color\n   * @memberof WordBox\n   */\n  _createBox(wrapper, left, top, width, height, word, color) {\n    let lineHeight = height,\n      paddingTop = 0,        \n      wordW = this._getWordsWidth(word.title)\n    \n    // 如果box中文字的宽度超出box本身的宽度，则需要分多行显示\n    if (wordW > width) {\n      let line = Math.ceil(wordW / width)\n      // 注意设置 line-height 属性和 padding-top 属性\n      lineHeight = parseInt(this.$wrapper.css('font-size'))\n      paddingTop = Math.max(0, (height - line * lineHeight) / 2)\n      height -= paddingTop\n    }\n    \n    let html = '<div class=\"box\" style=\"width:' + width + 'px;' +\n                  'height:' + height + 'px;' +\n                  'line-height:'+ lineHeight + 'px;' +\n                  'top:' + top + 'px;' +\n                  'left:' + left + 'px;' +\n                  'background-color:' + color + ';' +             \n                  (paddingTop ? ('padding-top:' + paddingTop + 'px;') : '') +\n                  '\">' + '<a href=\"' + word.url + '\" >' + word.title + '</a></div>'          \n    \n    $(wrapper).append(html)\n  }\n    \n  /**\n   * 将base随机分成num份\n   * @method _randRange\n   * @param {Number} base  被分割的数\n   * @param {Number} num   分割的份数\n   * @param {Number} round base被分割之后两部分的最大差，为了避免每部分太大或太小\n   * @return {Array} 包含num个分界点的数组\n   */ \n  _randRange(base, num, round) {        \n    let center = base / num,\n      min = center * (1 - round),\n      max = center * (1 + round),\n      rand = Math.random() * (max - min) + min\n    \n    if (num == 1) {\n      return [base]\n    }\n    \n    return [rand].concat(this._randRange(base - rand, num - 1, round))\n  }\n    \n  /**\n   * 每次绘制box时获取color列表中下一个颜色值\n   * @method _getNextColor\n   * @return {String} 颜色值\n   */\n  _getNextColor() {\n    let color = this.options.colors[this.colorPos % this.options.colors.length]\n    this.colorPos++\n    return color\n  }\n    \n  /**\n   * 获取指定字体大小的word的宽度，根据该宽度和 box 宽度判断是否分行\n   * @method _getWordsWidth\n   * @param {String} word \n   */ \n  _getWordsWidth(word) {\n    if ($('#get_ww').length < 1) {\n      $('<div id=\"get_ww\" style=\"display:block;visibility:hidden;font-size:'+this.$wrapper.css('font-size')+'px\"><span></span></div>').appendTo('body')\n    }\n    $('#get_ww span').html(word)\n    return $('#get_ww span').width()\n  }\n    \n  /**\n   * 随机排列数组元素\n   * @method _randArray\n   * @param {String} array\n   * @returns\n   * @memberof WordBox\n   */\n  _randArray(array) {\n    let clone = array.slice(),          \n      ret = [], \n      rand\n    for(let i = 0, len = array.length; i < len; i++) {\n      rand = Math.floor(Math.random() * clone.length)\n      let tmp = clone[0]\n      clone[0] = clone[rand]\n      clone[rand] = tmp\n      ret.push(clone[0])\n      clone = clone.slice(1)\n    }\n    return ret\n  }\n    \n  /**\n   * 绑定窗口大小改变事件\n   * @method _bindListener\n   * @memberof WordBox\n   */\n  _bindListener() {\n    if (!this.options.isFixedWidth) {\n      let _this = this, \n        timer = null\n      $(window).bind('resize', function() {     \n        if (timer) {\n          clearTimeout(window.timer)\n          timer = null\n        }           \n        timer = setTimeout(function() {\n          // 响应式 wordbox 根据父级元素宽度和高度的变化来改变自身的宽度和高度，重新绘制\n          if (_this.$wrapper.width() != _this.$wrapper.parent().width() || \n                            _this.$wrapper.height() != _this.$wrapper.parent().height()) {\n            _this.$wrapper.width(_this.$wrapper.parent().width())\n            _this.$wrapper.height(_this.$wrapper.parent().height())\n            // 清除之前绘制的wordbox\n            _this.$wrapper.empty()\n            // 重新绘制wordbox\n            _this.fillRect(_this.$wrapper, \n              0,\n              0,\n              _this.$wrapper.width(), \n              _this.$wrapper.height(),\n              _this.words)\n          }                    \n        }, 800)                 \n      })\n    }\n  }\n}    \n\nexport default WordBox\n\n\n\n\n","import './wordbox.scss'\n//import $ from 'jquery';\nimport WordBox from './wordbox.js'\n\n$.fn.wordbox = function(options) {\n\n  let instance = new WordBox(this, options) \n    \n  if (!instance) {\n    console.log('创建失败')\n    return null\n  }               \n    \n  // 返回jquery对象 \n  // this指的是应用插件的元素，而不是instance\n  return $(this)\n}\n\nexport {WordBox}\n"],"sourceRoot":""}